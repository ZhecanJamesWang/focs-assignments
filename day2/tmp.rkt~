#lang racket

; @param lst [List] Takes in a tree-rep of list
; @return [List] Tree with list format
(define (tree-add1 lst)
  (cond
    [(number? lst) (+ lst 1)]
    [else (cons (tree-add1 (first lst)) (tree-add1 (rest lst)))]
    ))

(display (tree-add1 '(3 (1 4))))